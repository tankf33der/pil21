# 22sep20 Software Lab. Alexander Burger

   Differences to Pil64
   ====================

+ PicoLisp Source instead of PilAsm
+ No pre-installed PicoLisp required for bootstrapping
+ '*Run' not limited to 1024 FDs / 500 children
+ Shared libraries have ".so" extension
+ 'with' accepts 'var' instead of 'sym'
+ Map functions accept atomic arguments
+ Standard readline(3) library in REPL
+ 'history' function for readline
+ 'mix' accepts also negative arguments
+ 'native'
   * 'P' and 'W' result specifications
   * (T . any) argument passes direct Lisp value
   * 'T' result spec returns direct Lisp value (no skipped call)
+ '%@' function
+ 'struct'
   * Useful atomic result specifications
+ 'adr' returns a pointer usable by 'native' and 'struct'
+ 'info' returns the file argument in '@@'
+ '\~' marker in namespaces
+ Special 'priv' namespace
+ 'plio' function
+ 'buf' function
+ More checks for protected symbols
+ Lists of symbols as function parameters (destructuring, one-dimensional)

- '====' is not supported
- 'lines' is not supported
- 'tick' is not supported
- 'arg' without arguments is not supported
- 'tzo' is not supported
- 'case' is more strict in expecting atomic keys
- Second argument to 'name' (i.e. renaming) is not supported
- Lambda-binding environment offset for 'eval' and 'run' only for '@'
- 'native'
   * only functions with fixed number of arguments
   * 'T' changed (no skipped call)
- Because of readline(3), '*Run' tasks are suspended while typing in the REPL

% '*Run' cleared in children: 'forked' is not needed
% Main coroutine has a tag 'T'
